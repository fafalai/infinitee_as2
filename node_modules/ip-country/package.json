{
  "_args": [
    [
      {
        "raw": "ip-country",
        "scope": null,
        "escapedName": "ip-country",
        "name": "ip-country",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/ianwu/WebStormProjects/as1"
    ]
  ],
  "_from": "ip-country@latest",
  "_id": "ip-country@1.0.2",
  "_inCache": true,
  "_location": "/ip-country",
  "_nodeVersion": "7.9.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/ip-country-1.0.2.tgz_1493931937346_0.5906520544085652"
  },
  "_npmUser": {
    "name": "sumanion",
    "email": "sumanion122@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ip-country",
    "scope": null,
    "escapedName": "ip-country",
    "name": "ip-country",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/ip-country/-/ip-country-1.0.2.tgz",
  "_shasum": "61afbe715329f84293e1c0533c88ce826782b824",
  "_shrinkwrap": null,
  "_spec": "ip-country",
  "_where": "/Users/ianwu/WebStormProjects/as1",
  "author": {
    "name": "Ion Suman"
  },
  "bugs": {
    "url": "https://github.com/103058/ip-country/issues"
  },
  "dependencies": {
    "mmdb-reader": "^1.1.0"
  },
  "description": "Get country code based on the IP address.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "61afbe715329f84293e1c0533c88ce826782b824",
    "tarball": "https://registry.npmjs.org/ip-country/-/ip-country-1.0.2.tgz"
  },
  "gitHead": "9e8383ba26586a82e0a9a94001cd1eb70f49dbca",
  "homepage": "https://github.com/103058/ip-country#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "sumanion",
      "email": "sumanion122@gmail.com"
    }
  ],
  "name": "ip-country",
  "optionalDependencies": {},
  "readme": "\n# IP Country\n\nThe fastest way to detect country code based on the IP address\nusing minimal amount of memory.\n\n## Installation\n\nUsing npm:\n\n```bash\n$ npm install ip-country --save\n```\n\nUsing yarn:\n\n```bash\n$ yarn add ip-country\n```\n\n## Usage\n\nStandalone:\n\n```js\n// Load the module.\nconst ipCountry = require('ip-country')\n\n// Initiate the module with custom options.\nipCountry.init({\n  // You can specify the path to a custom MMDb file if you want\n  // more details about IP addresses (like, city, zipcode, population).\n  // Note: For most cases the default MMDb file should be enough.\n  // Note: You can find free Dbs here: http://dev.maxmind.com/geoip/geoip2/geolite2/\n  // Note: Big MMDb files will use more memory and lookups will be slower.\n  mmdb: 'BUILTIN_MMDB_PATH',\n\n  // Return a default country when the country can not be detected from the IP.\n  fallbackCountry: 'US',\n\n  // Expose full IP lookup info in the request (`res.locals.IPInfo`).\n  exposeInfo: false\n})\n\n// Get information about an IP.\nipCountry.lookup('72.229.28.185') // Object\nipCountry.lookup('87.242.77.197') // Object\nipCountry.lookup('foobar') // null\nipCountry.lookup() // null\n\n// Detect country code of an IP.\nipCountry.country('72.229.28.185') // US\nipCountry.country('87.242.77.197') // RU\nipCountry.country('foobar') // US (fallback country)\nipCountry.country() // US (fallback country)\n```\n\nIn [ExpressJS](http://expressjs.com/):\n\n```js\n// Load the module.\nconst ipCountry = require('ip-country')\n\n// The Express app.\nconst app = express()\n\n// The `ip-country` module will automatically use `res.locals.ip`\n// when it is available, or the `req.ip` otherwise.\napp.use((req, res, next) => {\n  res.locals.ip = '87.242.77.197' // Russian IP address.\n  next()\n})\n\n// Use the middleware to expose IP info and detected country code to the request.\napp.use(ipCountry.setup({\n  /* accepts same options as the standalone init method */\n}))\n\n// Now, you can use exposed details.\napp.get('/', (req, res) => {\n\n  // You should be able to access the country of client.\n  res.locals.country // RU (detected using IP from `res.locals.ip`)\n\n  // If you used `exposeInfo: true` option you should be able to access\n  // the entire lookup info.\n  res.locals.IPInfo // Is an `Object` when `exposeInfo` is `true` and `undefined` otherwise.\n\n  res.send('EOF')\n})\n\n```\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2017 Ion Suman <sumanion122@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/103058/ip-country.git"
  },
  "scripts": {},
  "version": "1.0.2"
}
